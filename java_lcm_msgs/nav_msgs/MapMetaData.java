/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package nav_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class MapMetaData implements lcm.lcm.LCMEncodable
{
    public std_msgs.Time map_load_time;

    public float resolution;

    public int width;

    public int height;

    public geometry_msgs.Pose origin;

 
    public MapMetaData()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x3245f3cdb468ba93L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(nav_msgs.MapMetaData.class))
            return 0L;
 
        classes.add(nav_msgs.MapMetaData.class);
        long hash = LCM_FINGERPRINT_BASE
             + std_msgs.Time._hashRecursive(classes)
             + geometry_msgs.Pose._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        this.map_load_time._encodeRecursive(outs); 
 
        outs.writeFloat(this.resolution); 
 
        outs.writeInt(this.width); 
 
        outs.writeInt(this.height); 
 
        this.origin._encodeRecursive(outs); 
 
    }
 
    public MapMetaData(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public MapMetaData(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static nav_msgs.MapMetaData _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        nav_msgs.MapMetaData o = new nav_msgs.MapMetaData();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.map_load_time = std_msgs.Time._decodeRecursiveFactory(ins);
 
        this.resolution = ins.readFloat();
 
        this.width = ins.readInt();
 
        this.height = ins.readInt();
 
        this.origin = geometry_msgs.Pose._decodeRecursiveFactory(ins);
 
    }
 
    public nav_msgs.MapMetaData copy()
    {
        nav_msgs.MapMetaData outobj = new nav_msgs.MapMetaData();
        outobj.map_load_time = this.map_load_time.copy();
 
        outobj.resolution = this.resolution;
 
        outobj.width = this.width;
 
        outobj.height = this.height;
 
        outobj.origin = this.origin.copy();
 
        return outobj;
    }
 
}

