/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package sensor_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class NavSatFix implements lcm.lcm.LCMEncodable
{
    public std_msgs.Header header;

    public sensor_msgs.NavSatStatus status;

    public double latitude;

    public double longitude;

    public double altitude;

    /**
     * LCM Type: double[9]
     */
    public double position_covariance[];

    public byte position_covariance_type;

 
    public NavSatFix()
    {
        position_covariance = new double[9];
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x4a84d20526d9067aL;
 
    public static final byte COVARIANCE_TYPE_UNKNOWN = (byte) 0;
    public static final byte COVARIANCE_TYPE_APPROXIMATED = (byte) 1;
    public static final byte COVARIANCE_TYPE_DIAGONAL_KNOWN = (byte) 2;
    public static final byte COVARIANCE_TYPE_KNOWN = (byte) 3;

    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(sensor_msgs.NavSatFix.class))
            return 0L;
 
        classes.add(sensor_msgs.NavSatFix.class);
        long hash = LCM_FINGERPRINT_BASE
             + std_msgs.Header._hashRecursive(classes)
             + sensor_msgs.NavSatStatus._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        this.header._encodeRecursive(outs); 
 
        this.status._encodeRecursive(outs); 
 
        outs.writeDouble(this.latitude); 
 
        outs.writeDouble(this.longitude); 
 
        outs.writeDouble(this.altitude); 
 
        for (int a = 0; a < 9; a++) {
            outs.writeDouble(this.position_covariance[a]); 
        }
 
        outs.writeByte(this.position_covariance_type); 
 
    }
 
    public NavSatFix(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public NavSatFix(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static sensor_msgs.NavSatFix _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        sensor_msgs.NavSatFix o = new sensor_msgs.NavSatFix();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.header = std_msgs.Header._decodeRecursiveFactory(ins);
 
        this.status = sensor_msgs.NavSatStatus._decodeRecursiveFactory(ins);
 
        this.latitude = ins.readDouble();
 
        this.longitude = ins.readDouble();
 
        this.altitude = ins.readDouble();
 
        this.position_covariance = new double[(int) 9];
        for (int a = 0; a < 9; a++) {
            this.position_covariance[a] = ins.readDouble();
        }
 
        this.position_covariance_type = ins.readByte();
 
    }
 
    public sensor_msgs.NavSatFix copy()
    {
        sensor_msgs.NavSatFix outobj = new sensor_msgs.NavSatFix();
        outobj.header = this.header.copy();
 
        outobj.status = this.status.copy();
 
        outobj.latitude = this.latitude;
 
        outobj.longitude = this.longitude;
 
        outobj.altitude = this.altitude;
 
        outobj.position_covariance = new double[(int) 9];
        System.arraycopy(this.position_covariance, 0, outobj.position_covariance, 0, 9); 
        outobj.position_covariance_type = this.position_covariance_type;
 
        return outobj;
    }
 
}

