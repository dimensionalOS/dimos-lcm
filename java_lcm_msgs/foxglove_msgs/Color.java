/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package foxglove_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class Color implements lcm.lcm.LCMEncodable
{
    public double r;

    public double g;

    public double b;

    public double a;

 
    public Color()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x998136169753c441L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(foxglove_msgs.Color.class))
            return 0L;
 
        classes.add(foxglove_msgs.Color.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeDouble(this.r); 
 
        outs.writeDouble(this.g); 
 
        outs.writeDouble(this.b); 
 
        outs.writeDouble(this.a); 
 
    }
 
    public Color(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public Color(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static foxglove_msgs.Color _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        foxglove_msgs.Color o = new foxglove_msgs.Color();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.r = ins.readDouble();
 
        this.g = ins.readDouble();
 
        this.b = ins.readDouble();
 
        this.a = ins.readDouble();
 
    }
 
    public foxglove_msgs.Color copy()
    {
        foxglove_msgs.Color outobj = new foxglove_msgs.Color();
        outobj.r = this.r;
 
        outobj.g = this.g;
 
        outobj.b = this.b;
 
        outobj.a = this.a;
 
        return outobj;
    }
 
}

