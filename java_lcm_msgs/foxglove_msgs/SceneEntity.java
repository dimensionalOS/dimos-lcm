/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package foxglove_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class SceneEntity implements lcm.lcm.LCMEncodable
{
    public int metadata_length;

    public int arrows_length;

    public int cubes_length;

    public int spheres_length;

    public int cylinders_length;

    public int lines_length;

    public int triangles_length;

    public int texts_length;

    public int models_length;

    public builtin_interfaces.Time timestamp;

    public String frame_id;

    public String id;

    public builtin_interfaces.Duration lifetime;

    public boolean frame_locked;

    /**
     * LCM Type: foxglove_msgs.KeyValuePair[metadata_length]
     */
    public foxglove_msgs.KeyValuePair metadata[];

    /**
     * LCM Type: foxglove_msgs.ArrowPrimitive[arrows_length]
     */
    public foxglove_msgs.ArrowPrimitive arrows[];

    /**
     * LCM Type: foxglove_msgs.CubePrimitive[cubes_length]
     */
    public foxglove_msgs.CubePrimitive cubes[];

    /**
     * LCM Type: foxglove_msgs.SpherePrimitive[spheres_length]
     */
    public foxglove_msgs.SpherePrimitive spheres[];

    /**
     * LCM Type: foxglove_msgs.CylinderPrimitive[cylinders_length]
     */
    public foxglove_msgs.CylinderPrimitive cylinders[];

    /**
     * LCM Type: foxglove_msgs.LinePrimitive[lines_length]
     */
    public foxglove_msgs.LinePrimitive lines[];

    /**
     * LCM Type: foxglove_msgs.TriangleListPrimitive[triangles_length]
     */
    public foxglove_msgs.TriangleListPrimitive triangles[];

    /**
     * LCM Type: foxglove_msgs.TextPrimitive[texts_length]
     */
    public foxglove_msgs.TextPrimitive texts[];

    /**
     * LCM Type: foxglove_msgs.ModelPrimitive[models_length]
     */
    public foxglove_msgs.ModelPrimitive models[];

 
    public SceneEntity()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xe143d679579f0ab0L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(foxglove_msgs.SceneEntity.class))
            return 0L;
 
        classes.add(foxglove_msgs.SceneEntity.class);
        long hash = LCM_FINGERPRINT_BASE
             + builtin_interfaces.Time._hashRecursive(classes)
             + builtin_interfaces.Duration._hashRecursive(classes)
             + foxglove_msgs.KeyValuePair._hashRecursive(classes)
             + foxglove_msgs.ArrowPrimitive._hashRecursive(classes)
             + foxglove_msgs.CubePrimitive._hashRecursive(classes)
             + foxglove_msgs.SpherePrimitive._hashRecursive(classes)
             + foxglove_msgs.CylinderPrimitive._hashRecursive(classes)
             + foxglove_msgs.LinePrimitive._hashRecursive(classes)
             + foxglove_msgs.TriangleListPrimitive._hashRecursive(classes)
             + foxglove_msgs.TextPrimitive._hashRecursive(classes)
             + foxglove_msgs.ModelPrimitive._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        char[] __strbuf = null;
        outs.writeInt(this.metadata_length); 
 
        outs.writeInt(this.arrows_length); 
 
        outs.writeInt(this.cubes_length); 
 
        outs.writeInt(this.spheres_length); 
 
        outs.writeInt(this.cylinders_length); 
 
        outs.writeInt(this.lines_length); 
 
        outs.writeInt(this.triangles_length); 
 
        outs.writeInt(this.texts_length); 
 
        outs.writeInt(this.models_length); 
 
        this.timestamp._encodeRecursive(outs); 
 
        __strbuf = new char[this.frame_id.length()]; this.frame_id.getChars(0, this.frame_id.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        __strbuf = new char[this.id.length()]; this.id.getChars(0, this.id.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        this.lifetime._encodeRecursive(outs); 
 
        outs.writeByte( this.frame_locked ? 1 : 0); 
 
        for (int a = 0; a < this.metadata_length; a++) {
            this.metadata[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.arrows_length; a++) {
            this.arrows[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.cubes_length; a++) {
            this.cubes[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.spheres_length; a++) {
            this.spheres[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.cylinders_length; a++) {
            this.cylinders[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.lines_length; a++) {
            this.lines[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.triangles_length; a++) {
            this.triangles[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.texts_length; a++) {
            this.texts[a]._encodeRecursive(outs); 
        }
 
        for (int a = 0; a < this.models_length; a++) {
            this.models[a]._encodeRecursive(outs); 
        }
 
    }
 
    public SceneEntity(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public SceneEntity(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static foxglove_msgs.SceneEntity _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        foxglove_msgs.SceneEntity o = new foxglove_msgs.SceneEntity();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        char[] __strbuf = null;
        this.metadata_length = ins.readInt();
 
        this.arrows_length = ins.readInt();
 
        this.cubes_length = ins.readInt();
 
        this.spheres_length = ins.readInt();
 
        this.cylinders_length = ins.readInt();
 
        this.lines_length = ins.readInt();
 
        this.triangles_length = ins.readInt();
 
        this.texts_length = ins.readInt();
 
        this.models_length = ins.readInt();
 
        this.timestamp = builtin_interfaces.Time._decodeRecursiveFactory(ins);
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.frame_id = new String(__strbuf);
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.id = new String(__strbuf);
 
        this.lifetime = builtin_interfaces.Duration._decodeRecursiveFactory(ins);
 
        this.frame_locked = ins.readByte()!=0;
 
        this.metadata = new foxglove_msgs.KeyValuePair[(int) metadata_length];
        for (int a = 0; a < this.metadata_length; a++) {
            this.metadata[a] = foxglove_msgs.KeyValuePair._decodeRecursiveFactory(ins);
        }
 
        this.arrows = new foxglove_msgs.ArrowPrimitive[(int) arrows_length];
        for (int a = 0; a < this.arrows_length; a++) {
            this.arrows[a] = foxglove_msgs.ArrowPrimitive._decodeRecursiveFactory(ins);
        }
 
        this.cubes = new foxglove_msgs.CubePrimitive[(int) cubes_length];
        for (int a = 0; a < this.cubes_length; a++) {
            this.cubes[a] = foxglove_msgs.CubePrimitive._decodeRecursiveFactory(ins);
        }
 
        this.spheres = new foxglove_msgs.SpherePrimitive[(int) spheres_length];
        for (int a = 0; a < this.spheres_length; a++) {
            this.spheres[a] = foxglove_msgs.SpherePrimitive._decodeRecursiveFactory(ins);
        }
 
        this.cylinders = new foxglove_msgs.CylinderPrimitive[(int) cylinders_length];
        for (int a = 0; a < this.cylinders_length; a++) {
            this.cylinders[a] = foxglove_msgs.CylinderPrimitive._decodeRecursiveFactory(ins);
        }
 
        this.lines = new foxglove_msgs.LinePrimitive[(int) lines_length];
        for (int a = 0; a < this.lines_length; a++) {
            this.lines[a] = foxglove_msgs.LinePrimitive._decodeRecursiveFactory(ins);
        }
 
        this.triangles = new foxglove_msgs.TriangleListPrimitive[(int) triangles_length];
        for (int a = 0; a < this.triangles_length; a++) {
            this.triangles[a] = foxglove_msgs.TriangleListPrimitive._decodeRecursiveFactory(ins);
        }
 
        this.texts = new foxglove_msgs.TextPrimitive[(int) texts_length];
        for (int a = 0; a < this.texts_length; a++) {
            this.texts[a] = foxglove_msgs.TextPrimitive._decodeRecursiveFactory(ins);
        }
 
        this.models = new foxglove_msgs.ModelPrimitive[(int) models_length];
        for (int a = 0; a < this.models_length; a++) {
            this.models[a] = foxglove_msgs.ModelPrimitive._decodeRecursiveFactory(ins);
        }
 
    }
 
    public foxglove_msgs.SceneEntity copy()
    {
        foxglove_msgs.SceneEntity outobj = new foxglove_msgs.SceneEntity();
        outobj.metadata_length = this.metadata_length;
 
        outobj.arrows_length = this.arrows_length;
 
        outobj.cubes_length = this.cubes_length;
 
        outobj.spheres_length = this.spheres_length;
 
        outobj.cylinders_length = this.cylinders_length;
 
        outobj.lines_length = this.lines_length;
 
        outobj.triangles_length = this.triangles_length;
 
        outobj.texts_length = this.texts_length;
 
        outobj.models_length = this.models_length;
 
        outobj.timestamp = this.timestamp.copy();
 
        outobj.frame_id = this.frame_id;
 
        outobj.id = this.id;
 
        outobj.lifetime = this.lifetime.copy();
 
        outobj.frame_locked = this.frame_locked;
 
        outobj.metadata = new foxglove_msgs.KeyValuePair[(int) metadata_length];
        for (int a = 0; a < this.metadata_length; a++) {
            outobj.metadata[a] = this.metadata[a].copy();
        }
 
        outobj.arrows = new foxglove_msgs.ArrowPrimitive[(int) arrows_length];
        for (int a = 0; a < this.arrows_length; a++) {
            outobj.arrows[a] = this.arrows[a].copy();
        }
 
        outobj.cubes = new foxglove_msgs.CubePrimitive[(int) cubes_length];
        for (int a = 0; a < this.cubes_length; a++) {
            outobj.cubes[a] = this.cubes[a].copy();
        }
 
        outobj.spheres = new foxglove_msgs.SpherePrimitive[(int) spheres_length];
        for (int a = 0; a < this.spheres_length; a++) {
            outobj.spheres[a] = this.spheres[a].copy();
        }
 
        outobj.cylinders = new foxglove_msgs.CylinderPrimitive[(int) cylinders_length];
        for (int a = 0; a < this.cylinders_length; a++) {
            outobj.cylinders[a] = this.cylinders[a].copy();
        }
 
        outobj.lines = new foxglove_msgs.LinePrimitive[(int) lines_length];
        for (int a = 0; a < this.lines_length; a++) {
            outobj.lines[a] = this.lines[a].copy();
        }
 
        outobj.triangles = new foxglove_msgs.TriangleListPrimitive[(int) triangles_length];
        for (int a = 0; a < this.triangles_length; a++) {
            outobj.triangles[a] = this.triangles[a].copy();
        }
 
        outobj.texts = new foxglove_msgs.TextPrimitive[(int) texts_length];
        for (int a = 0; a < this.texts_length; a++) {
            outobj.texts[a] = this.texts[a].copy();
        }
 
        outobj.models = new foxglove_msgs.ModelPrimitive[(int) models_length];
        for (int a = 0; a < this.models_length; a++) {
            outobj.models[a] = this.models[a].copy();
        }
 
        return outobj;
    }
 
}

