/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package actionlib_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class GoalStatus implements lcm.lcm.LCMEncodable
{
    public actionlib_msgs.GoalID goal_id;

    public byte status;

    public String text;

 
    public GoalStatus()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xc0b4e95febdcd994L;
 
    public static final byte PENDING = (byte) 0;
    public static final byte ACTIVE = (byte) 1;
    public static final byte PREEMPTED = (byte) 2;
    public static final byte SUCCEEDED = (byte) 3;
    public static final byte ABORTED = (byte) 4;
    public static final byte REJECTED = (byte) 5;
    public static final byte PREEMPTING = (byte) 6;
    public static final byte RECALLING = (byte) 7;
    public static final byte RECALLED = (byte) 8;
    public static final byte LOST = (byte) 9;

    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(actionlib_msgs.GoalStatus.class))
            return 0L;
 
        classes.add(actionlib_msgs.GoalStatus.class);
        long hash = LCM_FINGERPRINT_BASE
             + actionlib_msgs.GoalID._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        char[] __strbuf = null;
        this.goal_id._encodeRecursive(outs); 
 
        outs.writeByte(this.status); 
 
        __strbuf = new char[this.text.length()]; this.text.getChars(0, this.text.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
    }
 
    public GoalStatus(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public GoalStatus(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static actionlib_msgs.GoalStatus _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        actionlib_msgs.GoalStatus o = new actionlib_msgs.GoalStatus();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        char[] __strbuf = null;
        this.goal_id = actionlib_msgs.GoalID._decodeRecursiveFactory(ins);
 
        this.status = ins.readByte();
 
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.text = new String(__strbuf);
 
    }
 
    public actionlib_msgs.GoalStatus copy()
    {
        actionlib_msgs.GoalStatus outobj = new actionlib_msgs.GoalStatus();
        outobj.goal_id = this.goal_id.copy();
 
        outobj.status = this.status;
 
        outobj.text = this.text;
 
        return outobj;
    }
 
}

