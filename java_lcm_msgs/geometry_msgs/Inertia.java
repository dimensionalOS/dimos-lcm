/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package geometry_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class Inertia implements lcm.lcm.LCMEncodable
{
    public double m;

    public geometry_msgs.Vector3 com;

    public double ixx;

    public double ixy;

    public double ixz;

    public double iyy;

    public double iyz;

    public double izz;

 
    public Inertia()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xbeaa1a2a4c70b2e0L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(geometry_msgs.Inertia.class))
            return 0L;
 
        classes.add(geometry_msgs.Inertia.class);
        long hash = LCM_FINGERPRINT_BASE
             + geometry_msgs.Vector3._hashRecursive(classes)
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeDouble(this.m); 
 
        this.com._encodeRecursive(outs); 
 
        outs.writeDouble(this.ixx); 
 
        outs.writeDouble(this.ixy); 
 
        outs.writeDouble(this.ixz); 
 
        outs.writeDouble(this.iyy); 
 
        outs.writeDouble(this.iyz); 
 
        outs.writeDouble(this.izz); 
 
    }
 
    public Inertia(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public Inertia(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static geometry_msgs.Inertia _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        geometry_msgs.Inertia o = new geometry_msgs.Inertia();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.m = ins.readDouble();
 
        this.com = geometry_msgs.Vector3._decodeRecursiveFactory(ins);
 
        this.ixx = ins.readDouble();
 
        this.ixy = ins.readDouble();
 
        this.ixz = ins.readDouble();
 
        this.iyy = ins.readDouble();
 
        this.iyz = ins.readDouble();
 
        this.izz = ins.readDouble();
 
    }
 
    public geometry_msgs.Inertia copy()
    {
        geometry_msgs.Inertia outobj = new geometry_msgs.Inertia();
        outobj.m = this.m;
 
        outobj.com = this.com.copy();
 
        outobj.ixx = this.ixx;
 
        outobj.ixy = this.ixy;
 
        outobj.ixz = this.ixz;
 
        outobj.iyy = this.iyy;
 
        outobj.iyz = this.iyz;
 
        outobj.izz = this.izz;
 
        return outobj;
    }
 
}

