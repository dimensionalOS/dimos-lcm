/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package std_msgs;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class MultiArrayDimension implements lcm.lcm.LCMEncodable
{
    public String label;

    public int size;

    public int stride;

 
    public MultiArrayDimension()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xcec1b9e9d868ef97L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(std_msgs.MultiArrayDimension.class))
            return 0L;
 
        classes.add(std_msgs.MultiArrayDimension.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        char[] __strbuf = null;
        __strbuf = new char[this.label.length()]; this.label.getChars(0, this.label.length(), __strbuf, 0); outs.writeInt(__strbuf.length+1); for (int _i = 0; _i < __strbuf.length; _i++) outs.write(__strbuf[_i]); outs.writeByte(0); 
 
        outs.writeInt(this.size); 
 
        outs.writeInt(this.stride); 
 
    }
 
    public MultiArrayDimension(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public MultiArrayDimension(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static std_msgs.MultiArrayDimension _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        std_msgs.MultiArrayDimension o = new std_msgs.MultiArrayDimension();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        char[] __strbuf = null;
        __strbuf = new char[ins.readInt()-1]; for (int _i = 0; _i < __strbuf.length; _i++) __strbuf[_i] = (char) (ins.readByte()&0xff); ins.readByte(); this.label = new String(__strbuf);
 
        this.size = ins.readInt();
 
        this.stride = ins.readInt();
 
    }
 
    public std_msgs.MultiArrayDimension copy()
    {
        std_msgs.MultiArrayDimension outobj = new std_msgs.MultiArrayDimension();
        outobj.label = this.label;
 
        outobj.size = this.size;
 
        outobj.stride = this.stride;
 
        return outobj;
    }
 
}

