/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 * lcm-gen 1.5.1
 */

package builtin_interfaces;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class Duration implements lcm.lcm.LCMEncodable
{
    public int sec;

    public int nanosec;

 
    public Duration()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x263f39efa2a9af63L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(builtin_interfaces.Duration.class))
            return 0L;
 
        classes.add(builtin_interfaces.Duration.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeInt(this.sec); 
 
        outs.writeInt(this.nanosec); 
 
    }
 
    public Duration(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public Duration(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static builtin_interfaces.Duration _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        builtin_interfaces.Duration o = new builtin_interfaces.Duration();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.sec = ins.readInt();
 
        this.nanosec = ins.readInt();
 
    }
 
    public builtin_interfaces.Duration copy()
    {
        builtin_interfaces.Duration outobj = new builtin_interfaces.Duration();
        outobj.sec = this.sec;
 
        outobj.nanosec = this.nanosec;
 
        return outobj;
    }
 
}

