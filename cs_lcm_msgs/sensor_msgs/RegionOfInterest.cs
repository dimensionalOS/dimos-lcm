/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace sensor_msgs
{
    public sealed class RegionOfInterest : LCM.LCM.LCMEncodable
    {
        public int x_offset;
        public int y_offset;
        public int height;
        public int width;
        public bool do_rectify;
 
        public RegionOfInterest()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x398a869d05983f0eL;
 
        static RegionOfInterest()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("sensor_msgs.RegionOfInterest"))
                return 0L;
 
            classes.Add("sensor_msgs.RegionOfInterest");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.x_offset); 
 
            outs.Write(this.y_offset); 
 
            outs.Write(this.height); 
 
            outs.Write(this.width); 
 
            outs.Write(this.do_rectify); 
 
        }
 
        public RegionOfInterest(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public RegionOfInterest(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static sensor_msgs.RegionOfInterest _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            sensor_msgs.RegionOfInterest o = new sensor_msgs.RegionOfInterest();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.x_offset = ins.ReadInt32();
 
            this.y_offset = ins.ReadInt32();
 
            this.height = ins.ReadInt32();
 
            this.width = ins.ReadInt32();
 
            this.do_rectify = ins.ReadBoolean();
 
        }
 
        public sensor_msgs.RegionOfInterest Copy()
        {
            sensor_msgs.RegionOfInterest outobj = new sensor_msgs.RegionOfInterest();
            outobj.x_offset = this.x_offset;
 
            outobj.y_offset = this.y_offset;
 
            outobj.height = this.height;
 
            outobj.width = this.width;
 
            outobj.do_rectify = this.do_rectify;
 
            return outobj;
        }
    }
}

