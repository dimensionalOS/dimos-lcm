/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace sensor_msgs
{
    public sealed class JoyFeedbackArray : LCM.LCM.LCMEncodable
    {
        public int array_length;
        public sensor_msgs.JoyFeedback[] array;
 
        public JoyFeedbackArray()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xde2a78c20ffefa04L;
 
        static JoyFeedbackArray()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("sensor_msgs.JoyFeedbackArray"))
                return 0L;
 
            classes.Add("sensor_msgs.JoyFeedbackArray");
            ulong hash = LCM_FINGERPRINT_BASE
                 + sensor_msgs.JoyFeedback._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.array_length); 
 
            for (int a = 0; a < this.array_length; a++) {
                this.array[a]._encodeRecursive(outs); 
            }
 
        }
 
        public JoyFeedbackArray(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public JoyFeedbackArray(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static sensor_msgs.JoyFeedbackArray _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            sensor_msgs.JoyFeedbackArray o = new sensor_msgs.JoyFeedbackArray();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.array_length = ins.ReadInt32();
 
            this.array = new sensor_msgs.JoyFeedback[(int) array_length];
            for (int a = 0; a < this.array_length; a++) {
                this.array[a] = sensor_msgs.JoyFeedback._decodeRecursiveFactory(ins);
            }
 
        }
 
        public sensor_msgs.JoyFeedbackArray Copy()
        {
            sensor_msgs.JoyFeedbackArray outobj = new sensor_msgs.JoyFeedbackArray();
            outobj.array_length = this.array_length;
 
            outobj.array = new sensor_msgs.JoyFeedback[(int) array_length];
            for (int a = 0; a < this.array_length; a++) {
                outobj.array[a] = this.array[a].Copy();
            }
 
            return outobj;
        }
    }
}

