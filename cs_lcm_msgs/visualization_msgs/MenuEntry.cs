/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace visualization_msgs
{
    public sealed class MenuEntry : LCM.LCM.LCMEncodable
    {
        public int id;
        public int parent_id;
        public String title;
        public String command;
        public byte command_type;
 
        public MenuEntry()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x667b2d15ef03e972L;
 
        public const int FEEDBACK = 0;
        public const int ROSRUN = 1;
        public const int ROSLAUNCH = 2;

        static MenuEntry()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("visualization_msgs.MenuEntry"))
                return 0L;
 
            classes.Add("visualization_msgs.MenuEntry");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            outs.Write(this.id); 
 
            outs.Write(this.parent_id); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.title); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.command); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
            outs.Write(this.command_type); 
 
        }
 
        public MenuEntry(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public MenuEntry(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static visualization_msgs.MenuEntry _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            visualization_msgs.MenuEntry o = new visualization_msgs.MenuEntry();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.id = ins.ReadInt32();
 
            this.parent_id = ins.ReadInt32();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.title = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.command = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
            this.command_type = ins.ReadByte();
 
        }
 
        public visualization_msgs.MenuEntry Copy()
        {
            visualization_msgs.MenuEntry outobj = new visualization_msgs.MenuEntry();
            outobj.id = this.id;
 
            outobj.parent_id = this.parent_id;
 
            outobj.title = this.title;
 
            outobj.command = this.command;
 
            outobj.command_type = this.command_type;
 
            return outobj;
        }
    }
}

