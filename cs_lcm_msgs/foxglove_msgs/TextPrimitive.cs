/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace foxglove_msgs
{
    public sealed class TextPrimitive : LCM.LCM.LCMEncodable
    {
        public geometry_msgs.Pose pose;
        public bool billboard;
        public double font_size;
        public bool scale_invariant;
        public foxglove_msgs.Color color;
        public String text;
 
        public TextPrimitive()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x3a761dcf4ac0e7c2L;
 
        static TextPrimitive()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("foxglove_msgs.TextPrimitive"))
                return 0L;
 
            classes.Add("foxglove_msgs.TextPrimitive");
            ulong hash = LCM_FINGERPRINT_BASE
                 + geometry_msgs.Pose._hashRecursive(classes)
                 + foxglove_msgs.Color._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            this.pose._encodeRecursive(outs); 
 
            outs.Write(this.billboard); 
 
            outs.Write(this.font_size); 
 
            outs.Write(this.scale_invariant); 
 
            this.color._encodeRecursive(outs); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.text); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
        }
 
        public TextPrimitive(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public TextPrimitive(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static foxglove_msgs.TextPrimitive _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            foxglove_msgs.TextPrimitive o = new foxglove_msgs.TextPrimitive();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.pose = geometry_msgs.Pose._decodeRecursiveFactory(ins);
 
            this.billboard = ins.ReadBoolean();
 
            this.font_size = ins.ReadDouble();
 
            this.scale_invariant = ins.ReadBoolean();
 
            this.color = foxglove_msgs.Color._decodeRecursiveFactory(ins);
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.text = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
        }
 
        public foxglove_msgs.TextPrimitive Copy()
        {
            foxglove_msgs.TextPrimitive outobj = new foxglove_msgs.TextPrimitive();
            outobj.pose = this.pose.Copy();
 
            outobj.billboard = this.billboard;
 
            outobj.font_size = this.font_size;
 
            outobj.scale_invariant = this.scale_invariant;
 
            outobj.color = this.color.Copy();
 
            outobj.text = this.text;
 
            return outobj;
        }
    }
}

