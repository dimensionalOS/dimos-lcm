/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace foxglove_msgs
{
    public sealed class FrameTransforms : LCM.LCM.LCMEncodable
    {
        public int transforms_length;
        public foxglove_msgs.FrameTransform[] transforms;
 
        public FrameTransforms()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x37bc5cbce50a5ce2L;
 
        static FrameTransforms()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("foxglove_msgs.FrameTransforms"))
                return 0L;
 
            classes.Add("foxglove_msgs.FrameTransforms");
            ulong hash = LCM_FINGERPRINT_BASE
                 + foxglove_msgs.FrameTransform._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.transforms_length); 
 
            for (int a = 0; a < this.transforms_length; a++) {
                this.transforms[a]._encodeRecursive(outs); 
            }
 
        }
 
        public FrameTransforms(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public FrameTransforms(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static foxglove_msgs.FrameTransforms _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            foxglove_msgs.FrameTransforms o = new foxglove_msgs.FrameTransforms();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.transforms_length = ins.ReadInt32();
 
            this.transforms = new foxglove_msgs.FrameTransform[(int) transforms_length];
            for (int a = 0; a < this.transforms_length; a++) {
                this.transforms[a] = foxglove_msgs.FrameTransform._decodeRecursiveFactory(ins);
            }
 
        }
 
        public foxglove_msgs.FrameTransforms Copy()
        {
            foxglove_msgs.FrameTransforms outobj = new foxglove_msgs.FrameTransforms();
            outobj.transforms_length = this.transforms_length;
 
            outobj.transforms = new foxglove_msgs.FrameTransform[(int) transforms_length];
            for (int a = 0; a < this.transforms_length; a++) {
                outobj.transforms[a] = this.transforms[a].Copy();
            }
 
            return outobj;
        }
    }
}

