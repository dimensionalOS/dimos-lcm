/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace foxglove_msgs
{
    public sealed class TriangleListPrimitive : LCM.LCM.LCMEncodable
    {
        public int points_length;
        public int colors_length;
        public int indices_length;
        public geometry_msgs.Pose pose;
        public geometry_msgs.Point[] points;
        public foxglove_msgs.Color color;
        public foxglove_msgs.Color[] colors;
        public int[] indices;
 
        public TriangleListPrimitive()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xcf3047947917a6ccL;
 
        static TriangleListPrimitive()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("foxglove_msgs.TriangleListPrimitive"))
                return 0L;
 
            classes.Add("foxglove_msgs.TriangleListPrimitive");
            ulong hash = LCM_FINGERPRINT_BASE
                 + geometry_msgs.Pose._hashRecursive(classes)
                 + geometry_msgs.Point._hashRecursive(classes)
                 + foxglove_msgs.Color._hashRecursive(classes)
                 + foxglove_msgs.Color._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.points_length); 
 
            outs.Write(this.colors_length); 
 
            outs.Write(this.indices_length); 
 
            this.pose._encodeRecursive(outs); 
 
            for (int a = 0; a < this.points_length; a++) {
                this.points[a]._encodeRecursive(outs); 
            }
 
            this.color._encodeRecursive(outs); 
 
            for (int a = 0; a < this.colors_length; a++) {
                this.colors[a]._encodeRecursive(outs); 
            }
 
            for (int a = 0; a < this.indices_length; a++) {
                outs.Write(this.indices[a]); 
            }
 
        }
 
        public TriangleListPrimitive(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public TriangleListPrimitive(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static foxglove_msgs.TriangleListPrimitive _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            foxglove_msgs.TriangleListPrimitive o = new foxglove_msgs.TriangleListPrimitive();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.points_length = ins.ReadInt32();
 
            this.colors_length = ins.ReadInt32();
 
            this.indices_length = ins.ReadInt32();
 
            this.pose = geometry_msgs.Pose._decodeRecursiveFactory(ins);
 
            this.points = new geometry_msgs.Point[(int) points_length];
            for (int a = 0; a < this.points_length; a++) {
                this.points[a] = geometry_msgs.Point._decodeRecursiveFactory(ins);
            }
 
            this.color = foxglove_msgs.Color._decodeRecursiveFactory(ins);
 
            this.colors = new foxglove_msgs.Color[(int) colors_length];
            for (int a = 0; a < this.colors_length; a++) {
                this.colors[a] = foxglove_msgs.Color._decodeRecursiveFactory(ins);
            }
 
            this.indices = new int[(int) indices_length];
            for (int a = 0; a < this.indices_length; a++) {
                this.indices[a] = ins.ReadInt32();
            }
 
        }
 
        public foxglove_msgs.TriangleListPrimitive Copy()
        {
            foxglove_msgs.TriangleListPrimitive outobj = new foxglove_msgs.TriangleListPrimitive();
            outobj.points_length = this.points_length;
 
            outobj.colors_length = this.colors_length;
 
            outobj.indices_length = this.indices_length;
 
            outobj.pose = this.pose.Copy();
 
            outobj.points = new geometry_msgs.Point[(int) points_length];
            for (int a = 0; a < this.points_length; a++) {
                outobj.points[a] = this.points[a].Copy();
            }
 
            outobj.color = this.color.Copy();
 
            outobj.colors = new foxglove_msgs.Color[(int) colors_length];
            for (int a = 0; a < this.colors_length; a++) {
                outobj.colors[a] = this.colors[a].Copy();
            }
 
            outobj.indices = new int[(int) indices_length];
            for (int a = 0; a < this.indices_length; a++) {
                outobj.indices[a] = this.indices[a];
            }
 
            return outobj;
        }
    }
}

