/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace foxglove_msgs
{
    public sealed class ArrowPrimitive : LCM.LCM.LCMEncodable
    {
        public geometry_msgs.Pose pose;
        public double shaft_length;
        public double shaft_diameter;
        public double head_length;
        public double head_diameter;
        public foxglove_msgs.Color color;
 
        public ArrowPrimitive()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xb1f9d32968e60fbbL;
 
        static ArrowPrimitive()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("foxglove_msgs.ArrowPrimitive"))
                return 0L;
 
            classes.Add("foxglove_msgs.ArrowPrimitive");
            ulong hash = LCM_FINGERPRINT_BASE
                 + geometry_msgs.Pose._hashRecursive(classes)
                 + foxglove_msgs.Color._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            this.pose._encodeRecursive(outs); 
 
            outs.Write(this.shaft_length); 
 
            outs.Write(this.shaft_diameter); 
 
            outs.Write(this.head_length); 
 
            outs.Write(this.head_diameter); 
 
            this.color._encodeRecursive(outs); 
 
        }
 
        public ArrowPrimitive(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public ArrowPrimitive(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static foxglove_msgs.ArrowPrimitive _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            foxglove_msgs.ArrowPrimitive o = new foxglove_msgs.ArrowPrimitive();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.pose = geometry_msgs.Pose._decodeRecursiveFactory(ins);
 
            this.shaft_length = ins.ReadDouble();
 
            this.shaft_diameter = ins.ReadDouble();
 
            this.head_length = ins.ReadDouble();
 
            this.head_diameter = ins.ReadDouble();
 
            this.color = foxglove_msgs.Color._decodeRecursiveFactory(ins);
 
        }
 
        public foxglove_msgs.ArrowPrimitive Copy()
        {
            foxglove_msgs.ArrowPrimitive outobj = new foxglove_msgs.ArrowPrimitive();
            outobj.pose = this.pose.Copy();
 
            outobj.shaft_length = this.shaft_length;
 
            outobj.shaft_diameter = this.shaft_diameter;
 
            outobj.head_length = this.head_length;
 
            outobj.head_diameter = this.head_diameter;
 
            outobj.color = this.color.Copy();
 
            return outobj;
        }
    }
}

