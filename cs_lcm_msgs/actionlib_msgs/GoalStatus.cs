/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace actionlib_msgs
{
    public sealed class GoalStatus : LCM.LCM.LCMEncodable
    {
        public actionlib_msgs.GoalID goal_id;
        public byte status;
        public String text;
 
        public GoalStatus()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xc0b4e95febdcd994L;
 
        public const int PENDING = 0;
        public const int ACTIVE = 1;
        public const int PREEMPTED = 2;
        public const int SUCCEEDED = 3;
        public const int ABORTED = 4;
        public const int REJECTED = 5;
        public const int PREEMPTING = 6;
        public const int RECALLING = 7;
        public const int RECALLED = 8;
        public const int LOST = 9;

        static GoalStatus()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("actionlib_msgs.GoalStatus"))
                return 0L;
 
            classes.Add("actionlib_msgs.GoalStatus");
            ulong hash = LCM_FINGERPRINT_BASE
                 + actionlib_msgs.GoalID._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            this.goal_id._encodeRecursive(outs); 
 
            outs.Write(this.status); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.text); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
        }
 
        public GoalStatus(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public GoalStatus(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static actionlib_msgs.GoalStatus _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            actionlib_msgs.GoalStatus o = new actionlib_msgs.GoalStatus();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.goal_id = actionlib_msgs.GoalID._decodeRecursiveFactory(ins);
 
            this.status = ins.ReadByte();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.text = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
        }
 
        public actionlib_msgs.GoalStatus Copy()
        {
            actionlib_msgs.GoalStatus outobj = new actionlib_msgs.GoalStatus();
            outobj.goal_id = this.goal_id.Copy();
 
            outobj.status = this.status;
 
            outobj.text = this.text;
 
            return outobj;
        }
    }
}

