/* LCM type definition class file
 * This file was automatically generated by lcm-gen 1.5.1
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace nav_msgs
{
    public sealed class MapMetaData : LCM.LCM.LCMEncodable
    {
        public std_msgs.Time map_load_time;
        public float resolution;
        public int width;
        public int height;
        public geometry_msgs.Pose origin;
 
        public MapMetaData()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x3245f3cdb468ba93L;
 
        static MapMetaData()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("nav_msgs.MapMetaData"))
                return 0L;
 
            classes.Add("nav_msgs.MapMetaData");
            ulong hash = LCM_FINGERPRINT_BASE
                 + std_msgs.Time._hashRecursive(classes)
                 + geometry_msgs.Pose._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            this.map_load_time._encodeRecursive(outs); 
 
            outs.Write(this.resolution); 
 
            outs.Write(this.width); 
 
            outs.Write(this.height); 
 
            this.origin._encodeRecursive(outs); 
 
        }
 
        public MapMetaData(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public MapMetaData(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static nav_msgs.MapMetaData _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            nav_msgs.MapMetaData o = new nav_msgs.MapMetaData();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.map_load_time = std_msgs.Time._decodeRecursiveFactory(ins);
 
            this.resolution = ins.ReadSingle();
 
            this.width = ins.ReadInt32();
 
            this.height = ins.ReadInt32();
 
            this.origin = geometry_msgs.Pose._decodeRecursiveFactory(ins);
 
        }
 
        public nav_msgs.MapMetaData Copy()
        {
            nav_msgs.MapMetaData outobj = new nav_msgs.MapMetaData();
            outobj.map_load_time = this.map_load_time.Copy();
 
            outobj.resolution = this.resolution;
 
            outobj.width = this.width;
 
            outobj.height = this.height;
 
            outobj.origin = this.origin.Copy();
 
            return outobj;
        }
    }
}

